/* Define custom font variables */
:root {
    --intro: 'Splash', cursive;
    --content1: 'Love Light', cursive;
    --content2: 'Babylonica', cursive;
}

/* Set box-sizing property for all elements */
*,
*::after,
*::before {
    box-sizing: border-box;
}

/* Reset default margin, padding, and set default font */
* {
    padding: 0;
    margin: 0;
    font-family: var(--content1);
}

/* Style the text selection */
*::selection {
    background-color: #d1362b;
    color: #e2e2e2;
}

/* Set global styles for the HTML and body */
html,
body {
    height: 100%;
    width: 100%;
    /* overflow: hidden; */
    /* background-color: #d1362b; */
    /* Hide scrollbar initially */
}

/* Style for the preloader section */
.preloader {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    z-index: 9999;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: #faf7f2;
    filter: brightness(97%);
}

/* Style for the preloader video */
.preloader video#loaderVideo {
    object-fit: cover;
    width: 800px;
    height: 800px;
}

/* Styles for the container and its show state */
.container {
    position: relative;
    opacity: 0;
    transition: opacity 1.5s ease-in-out;
}

.container.show {
    opacity: 1;
    width: 100%;
}


/* Styles for the background video */
video#bgVideo {
    width: 100vw;
    height: 100vh;
    object-fit: cover;
    position: fixed;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    z-index: -1;
    filter: brightness(80%);
}

/* Add a class to scale and animate the opacity of the intro section */
.animate-intro {
    animation: introAnimation 1s ease-out;
}

/* Keyframe animation for scaling and animating the opacity of the intro section */
@keyframes introAnimation {
    from {
        opacity: 0;
        transform: scale(0);
        transform-origin: top center;
    }

    to {
        opacity: 1;
        transform: scale(1);
        transform-origin: top center;
    }
}

/* Styles for the viewport header section */
.viewport-header {
    height: 100vh;
    text-align: center;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 100%;
}

/* Styles for the heading in the viewport header */
.viewport-header h1 {
    color: #f0e68c;
    text-transform: uppercase;
    letter-spacing: 3vw;
    line-height: 1.2;
    font-size: 3vw;
    text-align: center;
    font-weight: 500;
    position: relative;
}

/* Styles for the span within the heading in the viewport header */
.viewport-header h1 span {
    color: #e2e2e2;
    display: block;
    font-size: 10vw;
    letter-spacing: -1.3vw;
    font-family: var(--intro);
}


/* Styles for the header within the main content container */
.header {
    box-shadow: 0 4px 2px -2px #7571455e;
    background-color: #0000004d;
    display: none;
    position: fixed;
    top: 0;
    z-index: 5;
    width: 100%;
    column-gap: 37vw;
    opacity: 0;
}

.header.visible {
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 1;
}

.header .menu {
    cursor: pointer;
    background: none;
    border: none;
    transform: translateX(160px);
    transition: transform 1.7s ease;
}

.header .menu.active {
    transform: translateX(0px);
}


/* Styles for the logo within the header */
.header .logo {
    padding: 5px 0;
    text-align: center;
}

/* Styles for the heading within the logo */
.header .logo h1 {
    margin-top: -15px;
    color: #f0e68c;
    font-weight: 500;
    font-size: 3.5vw;
    font-family: var(--content2);
    -webkit-filter: drop-shadow(5px 5px 5px #79797983);
    filter: drop-shadow(5px 5px 5px #80808083);
}

/* Styles for the image within the logo */
.header .logo img {
    width: 3vw;
    -webkit-filter: drop-shadow(5px 5px 5px #83838383);
    filter: drop-shadow(5px 5px 5px #8f8f8f83);
}

.header .button button {
    background-color: transparent;
    color: #beb55f;
    font-weight: 500;
    border-radius: 12px;
    border: 1px solid #e2e2e2;
    padding: .5vw 1vw;
    font-size: 1.5vw;
}

.sidebar {
    position: fixed;
    height: 100vh;
    z-index: 2;
    top: 0;
    padding-top: 10vw;
    width: 0px;
    transition: width 0.5s ease;
    overflow: hidden;
    backdrop-filter: blur(25px);
}

.sidebar a {
    padding: 1vw 2vw;
    text-decoration: none;
    display: block;
    text-align: center;
    color: #fff;
}


@import url('https://fonts.googleapis.com/css?family=Signika+Negative:300,400&display=swap');

main {
    background-image: linear-gradient(109.6deg, rgba(0, 0, 0, 1) 11.2%, rgba(11, 132, 145, 1) 91.1%);

}

.container,
.content-container,
section.horizontal {
    overflow-x: hidden;
}

.content-container {
    font-family: "Signika Negative", sans-serif;
    font-weight: 300;
    padding: 20px;
    transition: margin-left 0.5s ease;
    margin: 0;
    padding: 0;
}

section h1 {
    margin: 0;
    padding: 50px 0 0 50px;
}

section p {
    margin: 0;
    padding: 50px 0 50px 50px;
}

section {
    width: 100%;
    height: 100%;
    position: relative;
    color: #e2e2e2;
}


section:nth-of-type(odd) {
    /* background-color: #f0f0f0; */
}

section:nth-of-type(even) {
    /* background-color: #ffffff; */
}








section.horizontal {
    overflow-x: hidden;
}

section.horizontal .pin-wrap,
section.horizontal .animation-wrap {
    display: flex;
    position: relative;
    z-index: 1;
    height: 100vh;
}


section.horizontal .item {
    position: relative;
    padding: 150px 80px;
    flex: 0 0 500px;
    height: calc(100vh - 300px);
    display: flex;
    align-items: center;
    line-height: 1.7;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    border-right: 1px solid rgba(0, 0, 0, 0.06);
    background-color: transparent;
}

section.horizontal .item:before {
    position: absolute;
    font-size: 100px;
    opacity: .13;
    font-weight: bold;
    z-index: -1;
    -webkit-transform: translate(-30px, -50px);
    transform: translate(-30px, -50px);
    line-height: 1;
}




section.horizontal .animation-wrap.to-right {
    counter-reset: item;
    float: left;
}

section.horizontal .animation-wrap.to-left {
    counter-reset: item 11;
    float: right;
}

section.horizontal .animation-wrap.to-right .item:before {
    counter-increment: item;
    content: counter(item);
}

section.horizontal .animation-wrap.to-left .item:before {
    counter-increment: item -1;
    content: counter(item);
}



section.horizontal .animation-wrap .item:nth-child(2n+2) {
    align-items: flex-start;
}

section.horizontal .animation-wrap .item:nth-child(4n+4) {
    align-items: flex-end;
}